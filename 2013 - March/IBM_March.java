import java.util.Random;


public class IBM_March
{
  public static int pa = 1;
  public static int pb;
  public static int pc;
  public static int pd;
  public static int pe;
  public static int penalty = 1;
  public static int[][] classOne = new int[][] {{1,1,1,1,1},{1,1,1,2,3},{1,1,1,2,4},{1,1,1,2,5},{1,1,1,3,2},{1,1,1,3,4},{1,1,1,3,5},{1,1,1,4,2},{1,1,1,4,3},{1,1,1,4,5},{1,1,1,5,2},{1,1,1,5,3},{1,1,1,5,4},{1,1,2,1,3},{1,1,2,1,4},{1,1,2,1,5},{1,1,2,2,3},{1,1,2,2,4},{1,1,2,2,5},{1,1,2,3,1},{1,1,2,3,2},{1,1,2,3,3},{1,1,2,3,4},{1,1,2,3,5},{1,1,2,4,1},{1,1,2,4,2},{1,1,2,4,3},{1,1,2,4,4},{1,1,2,4,5},{1,1,2,5,1},{1,1,2,5,2},{1,1,2,5,3},{1,1,2,5,4},{1,1,2,5,5},{1,1,3,1,2},{1,1,3,1,4},{1,1,3,1,5},{1,1,3,2,1},{1,1,3,2,2},{1,1,3,2,3},{1,1,3,2,4},{1,1,3,2,5},{1,1,3,3,2},{1,1,3,3,4},{1,1,3,3,5},{1,1,3,4,1},{1,1,3,4,2},{1,1,3,4,3},{1,1,3,4,4},{1,1,3,4,5},{1,1,3,5,1},{1,1,3,5,2},{1,1,3,5,3},{1,1,3,5,4},{1,1,3,5,5},{1,1,4,1,2},{1,1,4,1,3},{1,1,4,1,5},{1,1,4,2,1},{1,1,4,2,2},{1,1,4,2,3},{1,1,4,2,4},{1,1,4,2,5},{1,1,4,3,1},{1,1,4,3,2},{1,1,4,3,3},{1,1,4,3,4},{1,1,4,3,5},{1,1,4,4,2},{1,1,4,4,3},{1,1,4,4,5},{1,1,4,5,1},{1,1,4,5,2},{1,1,4,5,3},{1,1,4,5,4},{1,1,4,5,5},{1,1,5,1,2},{1,1,5,1,3},{1,1,5,1,4},{1,1,5,2,1},{1,1,5,2,2},{1,1,5,2,3},{1,1,5,2,4},{1,1,5,2,5},{1,1,5,3,1},{1,1,5,3,2},{1,1,5,3,3},{1,1,5,3,4},{1,1,5,3,5},{1,1,5,4,1},{1,1,5,4,2},{1,1,5,4,3},{1,1,5,4,4},{1,1,5,4,5},{1,1,5,5,2},{1,1,5,5,3},{1,1,5,5,4},{1,2,1,1,3},{1,2,1,1,4},{1,2,1,1,5},{1,2,1,2,3},{1,2,1,2,4},{1,2,1,2,5},{1,2,1,3,1},{1,2,1,3,2},{1,2,1,3,3},{1,2,1,3,4},{1,2,1,3,5},{1,2,1,4,1},{1,2,1,4,2},{1,2,1,4,3},{1,2,1,4,4},{1,2,1,4,5},{1,2,1,5,1},{1,2,1,5,2},{1,2,1,5,3},{1,2,1,5,4},{1,2,1,5,5},{1,2,2,1,3},{1,2,2,1,4},{1,2,2,1,5},{1,2,2,2,2},{1,2,2,3,1},{1,2,2,3,4},{1,2,2,3,5},{1,2,2,4,1},{1,2,2,4,3},{1,2,2,4,5},{1,2,2,5,1},{1,2,2,5,3},{1,2,2,5,4},{1,2,3,1,1},{1,2,3,1,2},{1,2,3,1,3},{1,2,3,1,4},{1,2,3,1,5},{1,2,3,2,1},{1,2,3,2,4},{1,2,3,2,5},{1,2,3,3,1},{1,2,3,3,4},{1,2,3,3,5},{1,2,3,4,1},{1,2,3,4,2},{1,2,3,4,3},{1,2,3,4,4},{1,2,3,4,5},{1,2,3,5,1},{1,2,3,5,2},{1,2,3,5,3},{1,2,3,5,4},{1,2,3,5,5},{1,2,4,1,1},{1,2,4,1,2},{1,2,4,1,3},{1,2,4,1,4},{1,2,4,1,5},{1,2,4,2,1},{1,2,4,2,3},{1,2,4,2,5},{1,2,4,3,1},{1,2,4,3,2},{1,2,4,3,3},{1,2,4,3,4},{1,2,4,3,5},{1,2,4,4,1},{1,2,4,4,3},{1,2,4,4,5},{1,2,4,5,1},{1,2,4,5,2},{1,2,4,5,3},{1,2,4,5,4},{1,2,4,5,5},{1,2,5,1,1},{1,2,5,1,2},{1,2,5,1,3},{1,2,5,1,4},{1,2,5,1,5},{1,2,5,2,1},{1,2,5,2,3},{1,2,5,2,4},{1,2,5,3,1},{1,2,5,3,2},{1,2,5,3,3},{1,2,5,3,4},{1,2,5,3,5},{1,2,5,4,1},{1,2,5,4,2},{1,2,5,4,3},{1,2,5,4,4},{1,2,5,4,5},{1,2,5,5,1},{1,2,5,5,3},{1,2,5,5,4},{1,3,1,1,2},{1,3,1,1,4},{1,3,1,1,5},{1,3,1,2,1},{1,3,1,2,2},{1,3,1,2,3},{1,3,1,2,4},{1,3,1,2,5},{1,3,1,3,2},{1,3,1,3,4},{1,3,1,3,5},{1,3,1,4,1},{1,3,1,4,2},{1,3,1,4,3},{1,3,1,4,4},{1,3,1,4,5},{1,3,1,5,1},{1,3,1,5,2},{1,3,1,5,3},{1,3,1,5,4},{1,3,1,5,5},{1,3,2,1,1},{1,3,2,1,2},{1,3,2,1,3},{1,3,2,1,4},{1,3,2,1,5},{1,3,2,2,1},{1,3,2,2,4},{1,3,2,2,5},{1,3,2,3,1},{1,3,2,3,4},{1,3,2,3,5},{1,3,2,4,1},{1,3,2,4,2},{1,3,2,4,3},{1,3,2,4,4},{1,3,2,4,5},{1,3,2,5,1},{1,3,2,5,2},{1,3,2,5,3},{1,3,2,5,4},{1,3,2,5,5},{1,3,3,1,2},{1,3,3,1,4},{1,3,3,1,5},{1,3,3,2,1},{1,3,3,2,4},{1,3,3,2,5},{1,3,3,3,3},{1,3,3,4,1},{1,3,3,4,2},{1,3,3,4,5},{1,3,3,5,1},{1,3,3,5,2},{1,3,3,5,4},{1,3,4,1,1},{1,3,4,1,2},{1,3,4,1,3},{1,3,4,1,4},{1,3,4,1,5},{1,3,4,2,1},{1,3,4,2,2},{1,3,4,2,3},{1,3,4,2,4},{1,3,4,2,5},{1,3,4,3,1},{1,3,4,3,2},{1,3,4,3,5},{1,3,4,4,1},{1,3,4,4,2},{1,3,4,4,5},{1,3,4,5,1},{1,3,4,5,2},{1,3,4,5,3},{1,3,4,5,4},{1,3,4,5,5},{1,3,5,1,1},{1,3,5,1,2},{1,3,5,1,3},{1,3,5,1,4},{1,3,5,1,5},{1,3,5,2,1},{1,3,5,2,2},{1,3,5,2,3},{1,3,5,2,4},{1,3,5,2,5},{1,3,5,3,1},{1,3,5,3,2},{1,3,5,3,4},{1,3,5,4,1},{1,3,5,4,2},{1,3,5,4,3},{1,3,5,4,4},{1,3,5,4,5},{1,3,5,5,1},{1,3,5,5,2},{1,3,5,5,4},{1,4,1,1,2},{1,4,1,1,3},{1,4,1,1,5},{1,4,1,2,1},{1,4,1,2,2},{1,4,1,2,3},{1,4,1,2,4},{1,4,1,2,5},{1,4,1,3,1},{1,4,1,3,2},{1,4,1,3,3},{1,4,1,3,4},{1,4,1,3,5},{1,4,1,4,2},{1,4,1,4,3},{1,4,1,4,5},{1,4,1,5,1},{1,4,1,5,2},{1,4,1,5,3},{1,4,1,5,4},{1,4,1,5,5},{1,4,2,1,1},{1,4,2,1,2},{1,4,2,1,3},{1,4,2,1,4},{1,4,2,1,5},{1,4,2,2,1},{1,4,2,2,3},{1,4,2,2,5},{1,4,2,3,1},{1,4,2,3,2},{1,4,2,3,3},{1,4,2,3,4},{1,4,2,3,5},{1,4,2,4,1},{1,4,2,4,3},{1,4,2,4,5},{1,4,2,5,1},{1,4,2,5,2},{1,4,2,5,3},{1,4,2,5,4},{1,4,2,5,5},{1,4,3,1,1},{1,4,3,1,2},{1,4,3,1,3},{1,4,3,1,4},{1,4,3,1,5},{1,4,3,2,1},{1,4,3,2,2},{1,4,3,2,3},{1,4,3,2,4},{1,4,3,2,5},{1,4,3,3,1},{1,4,3,3,2},{1,4,3,3,5},{1,4,3,4,1},{1,4,3,4,2},{1,4,3,4,5},{1,4,3,5,1},{1,4,3,5,2},{1,4,3,5,3},{1,4,3,5,4},{1,4,3,5,5},{1,4,4,1,2},{1,4,4,1,3},{1,4,4,1,5},{1,4,4,2,1},{1,4,4,2,3},{1,4,4,2,5},{1,4,4,3,1},{1,4,4,3,2},{1,4,4,3,5},{1,4,4,4,4},{1,4,4,5,1},{1,4,4,5,2},{1,4,4,5,3},{1,4,5,1,1},{1,4,5,1,2},{1,4,5,1,3},{1,4,5,1,4},{1,4,5,1,5},{1,4,5,2,1},{1,4,5,2,2},{1,4,5,2,3},{1,4,5,2,4},{1,4,5,2,5},{1,4,5,3,1},{1,4,5,3,2},{1,4,5,3,3},{1,4,5,3,4},{1,4,5,3,5},{1,4,5,4,1},{1,4,5,4,2},{1,4,5,4,3},{1,4,5,5,1},{1,4,5,5,2},{1,4,5,5,3},{1,5,1,1,2},{1,5,1,1,3},{1,5,1,1,4},{1,5,1,2,1},{1,5,1,2,2},{1,5,1,2,3},{1,5,1,2,4},{1,5,1,2,5},{1,5,1,3,1},{1,5,1,3,2},{1,5,1,3,3},{1,5,1,3,4},{1,5,1,3,5},{1,5,1,4,1},{1,5,1,4,2},{1,5,1,4,3},{1,5,1,4,4},{1,5,1,4,5},{1,5,1,5,2},{1,5,1,5,3},{1,5,1,5,4},{1,5,2,1,1},{1,5,2,1,2},{1,5,2,1,3},{1,5,2,1,4},{1,5,2,1,5},{1,5,2,2,1},{1,5,2,2,3},{1,5,2,2,4},{1,5,2,3,1},{1,5,2,3,2},{1,5,2,3,3},{1,5,2,3,4},{1,5,2,3,5},{1,5,2,4,1},{1,5,2,4,2},{1,5,2,4,3},{1,5,2,4,4},{1,5,2,4,5},{1,5,2,5,1},{1,5,2,5,3},{1,5,2,5,4},{1,5,3,1,1},{1,5,3,1,2},{1,5,3,1,3},{1,5,3,1,4},{1,5,3,1,5},{1,5,3,2,1},{1,5,3,2,2},{1,5,3,2,3},{1,5,3,2,4},{1,5,3,2,5},{1,5,3,3,1},{1,5,3,3,2},{1,5,3,3,4},{1,5,3,4,1},{1,5,3,4,2},{1,5,3,4,3},{1,5,3,4,4},{1,5,3,4,5},{1,5,3,5,1},{1,5,3,5,2},{1,5,3,5,4},{1,5,4,1,1},{1,5,4,1,2},{1,5,4,1,3},{1,5,4,1,4},{1,5,4,1,5},{1,5,4,2,1},{1,5,4,2,2},{1,5,4,2,3},{1,5,4,2,4},{1,5,4,2,5},{1,5,4,3,1},{1,5,4,3,2},{1,5,4,3,3},{1,5,4,3,4},{1,5,4,3,5},{1,5,4,4,1},{1,5,4,4,2},{1,5,4,4,3},{1,5,4,5,1},{1,5,4,5,2},{1,5,4,5,3},{1,5,5,1,2},{1,5,5,1,3},{1,5,5,1,4},{1,5,5,2,1},{1,5,5,2,3},{1,5,5,2,4},{1,5,5,3,1},{1,5,5,3,2},{1,5,5,3,4},{1,5,5,4,1},{1,5,5,4,2},{1,5,5,4,3},{1,5,5,5,5}};
  public static int[][] classTwo = new int[][] {{1,1,1,1,2},{1,1,1,1,3},{1,1,1,1,4},{1,1,1,1,5},{1,1,1,2,1},{1,1,1,2,2},{1,1,1,3,1},{1,1,1,3,3},{1,1,1,4,1},{1,1,1,4,4},{1,1,1,5,1},{1,1,1,5,5},{1,1,2,1,1},{1,1,2,1,2},{1,1,2,2,1},{1,1,2,2,2},{1,1,3,1,1},{1,1,3,1,3},{1,1,3,3,1},{1,1,3,3,3},{1,1,4,1,1},{1,1,4,1,4},{1,1,4,4,1},{1,1,4,4,4},{1,1,5,1,1},{1,1,5,1,5},{1,1,5,5,1},{1,1,5,5,5},{1,2,1,1,1},{1,2,1,1,2},{1,2,1,2,1},{1,2,1,2,2},{1,2,2,1,1},{1,2,2,1,2},{1,2,2,2,1},{1,2,2,2,3},{1,2,2,2,4},{1,2,2,2,5},{1,2,2,3,2},{1,2,2,3,3},{1,2,2,4,2},{1,2,2,4,4},{1,2,2,5,2},{1,2,2,5,5},{1,2,3,2,2},{1,2,3,2,3},{1,2,3,3,2},{1,2,3,3,3},{1,2,4,2,2},{1,2,4,2,4},{1,2,4,4,2},{1,2,4,4,4},{1,2,5,2,2},{1,2,5,2,5},{1,2,5,5,2},{1,2,5,5,5},{1,3,1,1,1},{1,3,1,1,3},{1,3,1,3,1},{1,3,1,3,3},{1,3,2,2,2},{1,3,2,2,3},{1,3,2,3,2},{1,3,2,3,3},{1,3,3,1,1},{1,3,3,1,3},{1,3,3,2,2},{1,3,3,2,3},{1,3,3,3,1},{1,3,3,3,2},{1,3,3,3,4},{1,3,3,3,5},{1,3,3,4,3},{1,3,3,4,4},{1,3,3,5,3},{1,3,3,5,5},{1,3,4,3,3},{1,3,4,3,4},{1,3,4,4,3},{1,3,4,4,4},{1,3,5,3,3},{1,3,5,3,5},{1,3,5,5,3},{1,3,5,5,5},{1,4,1,1,1},{1,4,1,1,4},{1,4,1,4,1},{1,4,1,4,4},{1,4,2,2,2},{1,4,2,2,4},{1,4,2,4,2},{1,4,2,4,4},{1,4,3,3,3},{1,4,3,3,4},{1,4,3,4,3},{1,4,3,4,4},{1,4,4,1,1},{1,4,4,1,4},{1,4,4,2,2},{1,4,4,2,4},{1,4,4,3,3},{1,4,4,3,4},{1,4,4,4,1},{1,4,4,4,2},{1,4,4,4,3},{1,4,4,4,5},{1,4,4,5,4},{1,4,4,5,5},{1,4,5,4,4},{1,4,5,4,5},{1,4,5,5,4},{1,4,5,5,5},{1,5,1,1,1},{1,5,1,1,5},{1,5,1,5,1},{1,5,1,5,5},{1,5,2,2,2},{1,5,2,2,5},{1,5,2,5,2},{1,5,2,5,5},{1,5,3,3,3},{1,5,3,3,5},{1,5,3,5,3},{1,5,3,5,5},{1,5,4,4,4},{1,5,4,4,5},{1,5,4,5,4},{1,5,4,5,5},{1,5,5,1,1},{1,5,5,1,5},{1,5,5,2,2},{1,5,5,2,5},{1,5,5,3,3},{1,5,5,3,5},{1,5,5,4,4},{1,5,5,4,5},{1,5,5,5,1},{1,5,5,5,2},{1,5,5,5,3},{1,5,5,5,4}};
  public static int[][] purchases = new int[31][5];
  
  public static void initPurchases()
  {
    Random randomGenerator = new Random();
    for (int row=0; row<purchases.length; row++) {
      for (int col=0; col<purchases[0].length; col++) {
        purchases[row][col] = randomGenerator.nextInt(5);
      }
    }
  }
  
  public static void printPurchaseList()
  {
    for (int row=0; row<purchases.length; row++) {
      System.out.print("{");
      for (int col=0; col<purchases[0].length; col++) {
        System.out.print(purchases[row][col] + ",");
      }
      System.out.println("}");
    }  
  }
  
  public static int Cost(int a, int b, int c, int d, int e)
  {
    return a + (b * pb) + (c * pc) + (d * pd) + (e * pe);
  }
  
  public static Boolean Fine(int a, int b, int c, int d, int e)
  {
    return Cost(a,b,c,d,e) % 5 != 0;
  }
  
  public static void setPrices(int Pa, int Pb, int Pc, int Pd, int Pe)
  {
    pb = Pb;
    pc = Pc;
    pd = Pd;
    pe = Pe;    
  }
  
  public static int run(Boolean print)
  {
    int fine = 0;
    for (int row=0; row<purchases.length; row++) {
      if (Fine(purchases[row][0], purchases[row][1], purchases[row][2], purchases[row][3], purchases[row][4]))
        fine += penalty;
    }
        
    if (print)
      print(fine);
    
    return fine % 2;
  }
  
  public static void main(String[] args)
  {    
    Boolean done = false;
    while (!done)
    {
      initPurchases();
      
      Boolean oneUnified = true;
      Boolean twoUnified = true;
      int standardOne = 0;
      int curOne = 0;
      for (int i=0; i<classOne.length; i++)
      {
        setPrices(1, classOne[i][1], classOne[i][2], classOne[i][3], classOne[i][4]);
        curOne = run(false);
        if (i == 0)
          standardOne = curOne;
        else if (curOne != standardOne)
        {
          oneUnified = false;
         //System.out.println("Broke ones at: " + i);
          break;
        }
      }
      
      int standardTwo = 0;
      int curTwo = 0;
      if (oneUnified)
      {
        for (int i=0; i<classTwo.length; i++)
        {
          setPrices(1, classTwo[i][1], classTwo[i][2], classTwo[i][3], classTwo[i][4]);
          curTwo = run(false);
          if (i == 0)
            standardTwo = curTwo;
          else if (curTwo != standardTwo)
          {
            twoUnified = false;
            System.out.println("Broke twos at: " + i);printPurchaseList();
            break;
          }
        }
      }
      if (oneUnified && twoUnified && standardOne != standardTwo)
      {
        done = true;
        System.out.println("We fucking did it!, here's the solution bitches.");
        printPurchaseList();
        System.out.println(standardOne + " " + standardTwo);
      }
    }
  }
  
  public static void print(int fine)
  {
    System.out.print("(" + pa + "," + pb + "," + pc + "," + pd + "," + pe + ") -> ");
    if (fine % 2 == 0)
      System.out.println("INTEGER");
    else
      System.out.println("");
  }
  
  public static int getClassType()
  {
    int numEdges = 0;
    if (pb == pc) numEdges++;
    if (pb == pd) numEdges++;
    if (pb == pe) numEdges++;
    if (pc == pd) numEdges++;
    if (pc == pe) numEdges++;
    if (pd == pe) numEdges++;
    return numEdges;
  }
    
  
  
  
  
  
  
  /*
    for (int b=1; b<=5; b++) {
      for (int c=1; c<=5; c++) {
        for (int d=1; d<=5; d++) {
          for (int e=1; e<=5; e++) {
            setPrices(1, b, c, d, e);
            run();
          }
        }
      }
    }
  */
}